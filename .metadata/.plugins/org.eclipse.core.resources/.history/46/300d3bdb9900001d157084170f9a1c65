package com.maderacnc.MaderaCNC.services;

import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

import com.maderacnc.MaderaCNC.models.Producto;
import com.maderacnc.MaderaCNC.models.Usuario;

@Service
public class UsuarioServices {
	
	private final UsuarioRepository usuarioRepository;
	
	
	
	public UsuarioServices(UsuarioRepository usuarioRepository) {
		super();
		this.usuarioRepository = usuarioRepository;
	}//constructor

	public List<Usuario> getUsers (){
		return usuarioRepository.findAll();
	} // getUsers
	
	public Usuario getUser (Long user_id) {
		return usuarioRepository.findById(user_id).orElseThrow(
				() -> new IllegalArgumentException("El nombre con el id [" + user_id + "] no existe.")
		);
	} // getUsers
	
	public Usuario deleteUser (Long user_id) {
		Usuario tmpUser = null;
		if (usuarioRepository.existsById(user_id)) {
			tmpUser = usuarioRepository.findById(user_id).get();
			usuarioRepository.deleteById(user_id);
		} // if
	return tmpUser;
	} // deleteUser
	
	public Usuario addUser (Usuario user) {
		Usuario tmpUser = null;
		Optional<Usuario> prodByName=usuarioRepository.findByNombre(user.getUser_name());
		if (prodByName.isPresent()) {
			throw new IllegalArgumentException("El usuario con el nombre [" + user.getUser_name() + "] ya existe.");
		} else {
			usuarioRepository.save(user);
			tmpUser = user;
		}
		return tmpUser;
	} // addUser
	
	public Usuario updateUser (Long user_id, String user_name, String user_lastNF, String user_lastNM, String user_date, String user_pass, String user_phone, String user_email) {
		Usuario tmpUser = null;
			if(usuarioRepository.existsById(user_id)) {
				tmpUser=usuarioRepository.findById(user_id).get();
				if (user_name != null) tmpUser.setUser_name(user_name);
				if (user_lastNF != null) tmpUser.setUser_lastNF(user_lastNF);
				if (user_lastNM != null) tmpUser.setUser_lastNM(user_lastNM);
				if (user_date != null) tmpUser.setUseR_date(user_date);
				if (user_pass != null) tmpUser.setUser_pass(user_pass);
				if (user_phone != null) tmpUser.setUser_phone(user_phone);
				if (user_email != null) tmpUser.setUser_email(user_email);
				usuarioRepository.save(tmpUser);
		} else {
			System.out.println("El nombre con el id "+user_id+ " no existe");
		}
		return tmpUser;
	}//updateUser
	
	// ---------- LOGIN ----------
	
//	@PostMapping
//	public String loginUser (String user_email, String user_pass) {
//		String tmpUser = "Correo y/o contraseña incorrectos.";
//		for (Usuario user : user_list) {
//			if (user.getUser_email().equals(user_email) && user.getUser_pass().equals(user_pass)) {
//				tmpUser = user.getUser_name() + " " + user.getUser_lastNF() + " " + user.getUser_lastNM();
//				tmpUser = "\n Bienvenid@  " + tmpUser + ", se inició sesión de manera correcta.";
//				break;
//			}
//		}
//		return tmpUser;
//	}
	
}